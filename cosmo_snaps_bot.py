import os
import random
import time
from dotenv import load_dotenv
import telegram
import schedule
from utils import logger


def send_image_to_telegram(bot, image_path: str, caption: str = None) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ Telegram-–∫–∞–Ω–∞–ª.

    Args:
        bot (telegram.Bot): –û–±—ä–µ–∫—Ç Telegram-–±–æ—Ç–∞.
        image_path (str): –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.
        caption (str, optional): –ü–æ–¥–ø–∏—Å—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é None.

    Raises:
        OSError: –ü—Ä–∏ –æ—à–∏–±–∫–∞—Ö –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞.
        telegram.error.TelegramError: –ü—Ä–∏ –æ—à–∏–±–∫–∞—Ö –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram.
    """
    if not isinstance(image_path, str):
        raise ValueError(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é: {image_path}")

    try:
        with open(image_path, "rb") as photo:
            try:
                bot.send_photo(chat_id=os.getenv("TG_CHAT_ID"), photo=photo, caption=caption)
            except telegram.error.TelegramError as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {image_path} –≤ Telegram: {e}")
                raise
    except OSError as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–∞–π–ª–∞ {image_path}: {e}")
        raise
    logger.info(f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {image_path}")


def get_random_image_from_random_folder(image_dirs: list) -> str:
    """–í—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –ø–∞–ø–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞ –∏ —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –Ω–µ—ë.

    Args:
        image_dirs (list): –°–ø–∏—Å–æ–∫ –ø—É—Ç–µ–π –∫ –ø–∞–ø–∫–∞–º —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏.

    Returns:
        str: –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é.

    Raises:
        ValueError: –ï—Å–ª–∏ –Ω–∏ –æ–¥–Ω–∞ –ø–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
        OSError: –ü—Ä–∏ –æ—à–∏–±–∫–∞—Ö –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ.
    """
    valid_extensions = (".jpg", ".png")

    existing_dirs = [d for d in image_dirs if os.path.exists(d)]
    if not existing_dirs:
        raise ValueError("–ù–∏ –æ–¥–Ω–∞ –∏–∑ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

    random.shuffle(existing_dirs)
    chosen_dir = random.choice(existing_dirs)

    try:
        files = os.listdir(chosen_dir)
    except OSError as e:
        raise ValueError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ {chosen_dir}: {e}")

    files = [
        f for f in files
        if os.path.isfile(os.path.join(chosen_dir, f)) and f.lower().endswith(valid_extensions)
    ]
    if not files:
        raise ValueError(f"–í –ø–∞–ø–∫–µ {chosen_dir} –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º–∏ {valid_extensions}")
    return os.path.join(chosen_dir, random.choice(files))


def publish_image(bot):
    """–ü—É–±–ª–∏–∫—É–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ Telegram-–∫–∞–Ω–∞–ª —Å –ø–æ–¥–ø–∏—Å—å—é.

    Args:
        bot (telegram.Bot): –û–±—ä–µ–∫—Ç Telegram-–±–æ—Ç–∞.
    """
    caption_templates = [
        "–ö–æ—Å–º–∏—á–µ—Å–∫–æ–µ —Ñ–æ—Ç–æ –æ—Ç @CosmoSnapsBot! –ò—Å—Ç–æ—á–Ω–∏–∫: {source} üöÄ",
        "–ü–æ–≥—Ä—É–∑–∏—Ç–µ—Å—å –≤ –∫—Ä–∞—Å–æ—Ç—É –∫–æ—Å–º–æ—Å–∞! üì∏ –ò—Å—Ç–æ—á–Ω–∏–∫: {source}",
        "–ù–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –∫–æ—Å–º–æ—Å–∞! üåå –û—Ç @CosmoSnapsBot, –∏—Å—Ç–æ—á–Ω–∏–∫: {source}",
        "–í–∑–≥–ª—è–Ω–∏—Ç–µ –Ω–∞ —ç—Ç—É –∫–æ—Å–º–∏—á–µ—Å–∫—É—é –∫—Ä–∞—Å–æ—Ç—É! ‚ú® –ò—Å—Ç–æ—á–Ω–∏–∫: {source}",
        "–ö–æ—Å–º–æ—Å –∑–æ–≤—ë—Ç! @CosmoSnapsBot –¥–µ–ª–∏—Ç—Å—è —Ñ–æ—Ç–æ –æ—Ç {source} ü™ê",
        "–ò–∑ –∫–æ—Å–º–æ—Å–∞ —Å –ª—é–±–æ–≤—å—é! üí´ –ò—Å—Ç–æ—á–Ω–∏–∫: {source}",
        "–£–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ –æ—Ç @CosmoSnapsBot! –ò—Å—Ç–æ—á–Ω–∏–∫: {source} üå†",
        "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –∑–≤—ë–∑–¥–∞–º —Å @CosmoSnapsBot! –ò—Å—Ç–æ—á–Ω–∏–∫: {source} ‚≠ê"
    ]

    image_dirs = ["nasa_images", "nasa_epic_photos", "spacex_images"]
    source = None
    try:
        image_path = get_random_image_from_random_folder(image_dirs)
        source = (
            "NASA APOD" if "nasa_images" in image_path else
            "NASA EPIC" if "nasa_epic_photos" in image_path else
            "SpaceX"
        )
        caption = random.choice(caption_templates).format(source=source)
        send_image_to_telegram(bot, image_path, caption)
    except ValueError as e:
        logger.error(f"–û—à–∏–±–∫–∞: {e}")
    except (OSError, telegram.error.TelegramError) as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.

    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è, —Å–æ–∑–¥–∞—ë—Ç –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    –ø—É–±–ª–∏–∫–∞—Ü–∏–π –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á.

    Raises:
        ValueError: –ï—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞.
    """
    load_dotenv()
    token = os.getenv("TG_BOT_TOKEN")
    chat_id = os.getenv("TG_CHAT_ID")
    post_interval = os.getenv("TG_POST_INTERVAL_HOURS", "4")

    if not token:
        raise ValueError("TG_BOT_TOKEN not found in .env")
    if not chat_id:
        raise ValueError("TG_CHAT_ID not found in .env")

    try:
        post_interval = float(post_interval)
    except ValueError:
        raise ValueError("TG_POST_INTERVAL_HOURS must be a number")

    bot = telegram.Bot(token=token)

    print(bot.get_me())
    print(f"–¢–µ–∫—É—â–∞—è —Ä–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    print(f"–ß–∞—Å—Ç–æ—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: –∫–∞–∂–¥—ã–µ {post_interval} —á–∞—Å–æ–≤")

    schedule.every(post_interval).hours.do(publish_image, bot=bot)

    publish_image(bot)

    while True:
        schedule.run_pending()
        time.sleep(60)


if __name__ == "__main__":
    main()